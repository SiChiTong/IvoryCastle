<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="ns" default="scorpio/mmp0"/>
    <arg name="carto" default="false"/>

    <!-- Spawn gazebo world-->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" default="$(find pmc_gazebo)/world/iceira_pmc_demo.world"/>
      <arg name="gui" default="true"/>
    </include>

    <!--Load/Spawn robot in gazebo env-->
    <arg name="x" default="0.4"/>
    <arg name="y" default="0.5"/>
    <arg name="z" default="0.0"/>
    <param name="$(arg ns)/robot_description" command="python $(find xacro)/xacro.py '$(find scorpio_description)/robots/scorpio.urdf.xacro' ns:=$(arg ns)" />
    <node name="scorpio_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
          args="-unpause -urdf -param $(arg ns)/robot_description -model $(arg ns) -x $(arg x) -y $(arg y) -z $(arg z)" />
    <node ns="$(arg ns)" name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
      <param name="tf_prefix" value="$(arg ns)" />
    </node>

    <!-- Load/Spawn controllers and configuration -->
    <rosparam ns="$(arg ns)" command="load" file="$(find ira_factory_robot_controller)/config/scorpio/ros_control/sim/controllers.yaml" />
    <node ns="$(arg ns)" name="controller_spawner" pkg="controller_manager" type="spawner"
          args="joint_state_controller diff_drive_controller"/>

    <!-- launch gripper -->
    <node ns="$(arg ns)" name="toyo_chy80_wrapper" pkg="toyo_chy80_wrapper" type="toyo_chy80_wrapper.py"/>

    <!-- correcting the odom -->
    <node ns="$(arg ns)" name="robot_pose_ekf" pkg="robot_pose_ekf" type="robot_pose_ekf">
      <param name="output_frame" value="$(arg ns)/odom" />
      <param name="base_footprint_frame" value="$(arg ns)/base_footprint" />
      <param name="odom_used" value="true" />
      <param name="imu_used" value="false" />
      <param name="vo_used" value="false" />
      <remap from="odom"     to="diff_drive_controller/odom"/>
    </node>

    <!-- launch gmapping slam -->
    <!--node ns="$(arg ns)" name="slam_gmapping" pkg="gmapping" type="slam_gmapping">
      <param name="base_frame" value="$(arg ns)/base_footprint"/>
      <param name="odom_frame" value="$(arg ns)/odom"/>
      <param name="map_frame" value="map"/>
      <param name="delta" value="0.02"/>
      <remap from="scan"                      to="front_scan"/>
      <remap from="map"			                  to="/map"/>
    </node-->

    <group unless="$(arg carto)">
      <!-- Load pre-mapped map-->
      <node name="map_server" pkg="map_server" type="map_server" args="$(find pmc_gazebo)/map/simulation.yaml" />

      <!-- launch amcl localization -->
      <node ns="$(arg ns)" pkg="amcl" type="amcl" name="amcl">
        <param name="use_map_topic"  value="true"/>
        <param name="odom_model_type"  value="diff"/>
        <param name="odom_frame_id"  value="$(arg ns)/odom"/>
        <param name="base_frame_id"  value="$(arg ns)/base_footprint"/>
        <param name="initial_pose_x" value="0.0"/>
        <param name="initial_pose_y" value="0.0"/>
        <param name="initial_pose_a" value="0.0"/>
        <param name="initial_cov_xx"  value="0.1"/>
        <param name="initial_cov_yy"  value="0.1"/>
        <param name="initial_cov_aa"  value="0.0872"/>
        <param name="min_particles"  value="100"/>
        <param name="max_particles"  value="500"/>
        <remap from="map"            to="/map"/>
        <remap from="scan"           to="front_scan"/>
      </node>
    </group>

    <!-- launch Cartographer slam -->
    <!--arg name="lua_filename" default="neuronbot_allcarto.lua"/-->
    <!--arg name="map_filename" default="$(find pmc_gazebo)/map/fusion.bag.pbstream"/-->
    <!--node ns="$(arg ns)" name="cartographer_node" pkg="cartographer_ros"
        type="cartographer_node" args="
            -configuration_directory $(find pmc_application)/config
            -configuration_basename $(arg lua_filename)"
        output="screen">
      <remap from="imu" to="imu" />
      <remap from="scan" to="front_scan" />
    </node-->

    <group if="$(arg carto)">
      <!--launch cartographer localization-->
      <arg name="lua_filename_local" default="neuronbot_allcarto_locali.lua"/>
      <arg name="map_filename" default="$(find pmc_gazebo)/map/fusion.bag.pbstream"/>
      <node ns="$(arg ns)" name="cartographer" pkg="cartographer_ros"
          type="cartographer_node" args="
              -configuration_directory $(find pmc_application)/config
              -configuration_basename $(arg lua_filename_local)
              -load_state_filename $(arg map_filename)
              -start_trajectory_with_default_topics=false"
          output="screen">
          <remap from="imu" to="imu" />
          <remap from="scan" to="front_scan" />
      </node>

      <!--launch cartographer grid map transformer-->
      <node ns="$(arg ns)" name="cartographer_occupancy_grid_node" pkg="cartographer_ros"
          type="cartographer_occupancy_grid_node" args="-resolution 0.05">
        <remap from="map" to="/map" />
      </node>
    </group>


    <!--Gui steering console (Optional)-->
    <node ns="$(arg ns)" name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
      <param name="default_topic" value="/$(arg ns)/diff_drive_controller/cmd_vel"/>
    </node>

    <!-- Gui Rviz   -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find pmc_application)/rviz/sghero_pmc_demo.rviz"/>

</launch>
