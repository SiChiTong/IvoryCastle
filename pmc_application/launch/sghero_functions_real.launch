<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="ns" default="scorpio/mmp0"/>

  <!--vocal input related, need isolately run-->
  <node name="aiml_stt_google" pkg="pmc_assistant" type="aiml_stt_google.py" output="screen"/>

  <!--image caption related-->
  <param name="model_path" value="$(find caption_pkg)/src/log_st/model-best.pth" />
  <param name="infos_path" value="$(find caption_pkg)/src/log_st/infos_st-best.pkl" />
  <param name="imagenet_weights_path" value="$(find caption_pkg)/src/data/imagenet_weights/resnet101.pth"/>
  <param name="image_caption_image_topic" value="$(arg ns)/base_camera/rgb/image_raw"/>
  <node name="caption_pmc_server" pkg="caption_pkg" type="caption_pmc_server.py"/>
  <node name="caption_pmc_client" pkg="caption_pkg" type="caption_pmc_client.py" output="screen"/>

  <!--navigation related-->
  <node name="tfServer" pkg="ira_factory_state_machine" type="tfServer.py"/>
  <node name="Tnavigation_real_dynamic" pkg="pmc_navigation" type="Tnavigation_real_dynamic.py" args="$(arg ns)"/>
  <node pkg="leg_detector" type="leg_detector" name="leg_detector" args="scan:=$(arg ns)/front_scan $(find leg_detector)/config/trained_leg_detector.yaml"/>
  <node pkg="leg_detector" type="leg_detector2" name="leg_detector2" args="scan:=$(arg ns)/back_scan $(find leg_detector)/config/trained_leg_detector.yaml"/>
  <node name="humancaution" pkg="pmc_navigation" type="humancaution.py" args="$(arg ns)"/>
  <node name="humancaution_chatter" pkg="pmc_navigation" type="humancaution_chatter.py"/>

  <!--state machine-->
  <include file="$(find pmc_state_machine)/launch/pmc_state_machine_test.launch"/>
</launch>
